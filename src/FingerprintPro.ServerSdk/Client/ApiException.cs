/*
 * Fingerprint Server API
 *
 * Fingerprint Server API allows you to search, update, and delete identification events in a server environment. It can be used for data exports, decision-making, and data analysis scenarios. Server API is intended for server-side usage, it's not intended to be used from the client side, whether it's a browser or a mobile device.
 *
 * OpenAPI spec version: 3
 * Contact: support@fingerprint.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System.Net.Http;
using FingerprintPro.ServerSdk.Model;

namespace FingerprintPro.ServerSdk.Client
{
    /// <summary>
    /// API Exception
    /// </summary>
    public class ApiException : Exception
    {
        /// <summary>
        /// Gets or sets the HTTP status code
        /// </summary>
        /// <value>The HTTP status code</value>
        public int HttpCode { get; private set; }

        /// <summary>
        /// Gets or sets the error code
        /// </summary>
        /// <value>The error code.</value>
        public ErrorCode ErrorCode { get; private set; }

        /// <summary>
        /// Gets or sets the error content (body json object)
        /// </summary>
        /// <value>The error content (Http response body).</value>
        public dynamic? ErrorContent { get; private set; }

        public HttpResponseMessage? ResponseMessage { get; private set; }

        /// <summary>
        /// Initializes a new instance of the <see cref="ApiException"/> class.
        /// </summary>
        /// <param name="httpCode">HTTP status code.</param>
        /// <param name="errorCode">Error code.</param>
        /// <param name="message">Error message.</param>
        /// <param name="responseMessage">Raw HTTP response</param>
        /// <param name="errorContent">Error content.</param>
        public ApiException(int httpCode, string message, ErrorCode errorCode, HttpResponseMessage? responseMessage = null, dynamic? errorContent = null) : base(message)
        {
            HttpCode = httpCode;
            ErrorCode = errorCode;
            ErrorContent = errorContent;
            ResponseMessage = responseMessage;
            ErrorContent = errorContent;
        }
    }

}
