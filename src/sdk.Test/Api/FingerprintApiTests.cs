/* 
 * Fingerprint Pro Server API
 *
 * Fingerprint Pro Server API allows you to get information about visitors and about individual events in a server environment. This API can be used for data exports, decision-making, and data analysis scenarios.
 *
 * OpenAPI spec version: 3
 * Contact: support@fingerprint.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using sdk.Client;
using sdk.Api;
using sdk.Model;

namespace sdk.Test
{
    /// <summary>
    ///  Class for testing FingerprintApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class FingerprintApiTests
    {
        private FingerprintApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new FingerprintApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of FingerprintApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' FingerprintApi
            //Assert.IsInstanceOfType(typeof(FingerprintApi), instance, "instance is a FingerprintApi");
        }

        /// <summary>
        /// Test GetEvent
        /// </summary>
        [Test]
        public void GetEventTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string requestId = null;
            //var response = instance.GetEvent(requestId);
            //Assert.IsInstanceOf<EventResponse> (response, "response is EventResponse");
        }
        /// <summary>
        /// Test GetVisits
        /// </summary>
        [Test]
        public void GetVisitsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string visitorId = null;
            //string requestId = null;
            //string linkedId = null;
            //int? limit = null;
            //int? before = null;
            //var response = instance.GetVisits(visitorId, requestId, linkedId, limit, before);
            //Assert.IsInstanceOf<Response> (response, "response is Response");
        }
    }

}
