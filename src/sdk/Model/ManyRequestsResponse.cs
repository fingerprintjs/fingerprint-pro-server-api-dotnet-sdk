/* 
 * Fingerprint Pro Server API
 *
 * Fingerprint Pro Server API allows you to get information about visitors and about individual events in a server environment. This API can be used for data exports, decision-making, and data analysis scenarios.
 *
 * OpenAPI spec version: 3
 * Contact: support@fingerprint.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace sdk.Model;

/// <summary>
///     ManyRequestsResponse
/// </summary>
[DataContract]
public class ManyRequestsResponse : IEquatable<ManyRequestsResponse>, IValidatableObject
{
    /// <summary>
    ///     Initializes a new instance of the <see cref="ManyRequestsResponse" /> class.
    /// </summary>
    /// <param name="error">Error text. (required).</param>
    public ManyRequestsResponse(string error = default)
    {
        // to ensure "error" is required (not null)

        if (error == null)
            throw new InvalidDataException(
                "error is a required property for ManyRequestsResponse and cannot be null");
        Error = error;
    }

    /// <summary>
    ///     Error text.
    /// </summary>
    /// <value>Error text.</value>
    [DataMember(Name = "error", EmitDefaultValue = false)]
    public string Error { get; set; }

    /// <summary>
    ///     Returns true if ManyRequestsResponse instances are equal
    /// </summary>
    /// <param name="input">Instance of ManyRequestsResponse to be compared</param>
    /// <returns>Boolean</returns>
    public bool Equals(ManyRequestsResponse input)
    {
        if (input == null)
            return false;

        return
            Error == input.Error ||
            (Error != null &&
             Error.Equals(input.Error));
    }

    /// <summary>
    ///     To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(
        ValidationContext validationContext)
    {
        yield break;
    }

    /// <summary>
    ///     Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class ManyRequestsResponse {\n");
        sb.Append("  Error: ").Append(Error).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    ///     Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return JsonConvert.SerializeObject(this, Formatting.Indented);
    }

    /// <summary>
    ///     Returns true if objects are equal
    /// </summary>
    /// <param name="input">Object to be compared</param>
    /// <returns>Boolean</returns>
    public override bool Equals(object input)
    {
        return Equals(input as ManyRequestsResponse);
    }

    /// <summary>
    ///     Gets the hash code
    /// </summary>
    /// <returns>Hash code</returns>
    public override int GetHashCode()
    {
        unchecked // Overflow is fine, just wrap
        {
            var hashCode = 41;
            if (Error != null)
                hashCode = hashCode * 59 + Error.GetHashCode();
            return hashCode;
        }
    }
}