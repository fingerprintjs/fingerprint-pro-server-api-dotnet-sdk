{{>partial_header}}
using {{packageName}}.Client;
{{#hasImport}}using {{packageName}}.{{modelPackage}};
{{/hasImport}}

namespace {{packageName}}.{{apiPackage}}
{
{{#operations}}
    /// <summary>
        /// Represents a collection of functions to interact with the API endpoints
        /// </summary>
    {{>visibility}} interface {{interfacePrefix}}{{classname}}
    {

    #region Synchronous Operations
    {{#operation}}
        {{#contents}}
            /// <summary>
                /// {{summary}}
                /// </summary>
            /// <remarks>
                /// {{{notes}}}
                /// </remarks>
            /// <exception cref="{{packageName}}.Client.ApiException">Thrown when fails to make API call</exception>
            {{#parameters}}/// <param name="{{paramName}}">{{{description}}}{{^required}} (optional{{#defaultValue}}, default to {{.}}{{/defaultValue}}){{/required}}</param>
            {{/parameters}}/// <returns>{{#returnType}}{{returnType}}{{/returnType}}</returns>
            {{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}void{{/returnType}} {{operationId}} ({{#parameters}}{{{dataType}}} {{paramName}}{{^required}}{{#optionalMethodArgument}} = null!{{/optionalMethodArgument}}{{/required}}{{#hasMore}}, {{/hasMore}}{{/parameters}});

            /// <summary>
                /// {{summary}}
                /// </summary>
            /// <remarks>
                /// {{{notes}}}
                /// </remarks>
            /// <exception cref="{{packageName}}.Client.ApiException">Thrown when fails to make API call</exception>
            {{#parameters}}/// <param name="{{paramName}}">{{{description}}}{{^required}} (optional{{#defaultValue}}, default to {{.}}{{/defaultValue}}){{/required}}</param>
            {{/parameters}}/// <returns>ApiResponse of {{#returnType}}{{returnType}}{{/returnType}}{{^returnType}}Object(void){{/returnType}}</returns>
            ApiResponse<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Object{{/returnType}}> {{operationId}}WithHttpInfo ({{#parameters}}{{{dataType}}} {{paramName}}{{^required}}{{#optionalMethodArgument}} = null!{{/optionalMethodArgument}}{{/required}}{{#hasMore}}, {{/hasMore}}{{/parameters}});
        {{/contents}}
    {{/operation}}
        #endregion Synchronous Operations
    {{#supportsAsync}}
            #region Asynchronous Operations
        {{#operation}}
            {{#contents}}
                    /// <summary>
                    /// {{summary}}
                    /// </summary>
                    /// <remarks>
                    /// {{{notes}}}
                    /// </remarks>
                    /// <exception cref="{{packageName}}.Client.ApiException">Thrown when fails to make API call</exception>
                {{#parameters}}/// <param name="{{paramName}}">{{{description}}}{{^required}} (optional{{#defaultValue}}, default to {{.}}{{/defaultValue}}){{/required}}</param>
                {{/parameters}}/// <returns>Task of {{#returnType}}{{returnType}}{{/returnType}}{{^returnType}}void{{/returnType}}</returns>
                {{#returnType}}Task<{{{returnType}}}>{{/returnType}}{{^returnType}}Task{{/returnType}} {{operationId}}Async ({{#parameters}}{{{dataType}}} {{paramName}}{{^required}}{{#optionalMethodArgument}} = null!{{/optionalMethodArgument}}{{/required}}{{#hasMore}}, {{/hasMore}}{{/parameters}});

                    /// <summary>
                    /// {{summary}}e
                    /// </summary>
                    /// <remarks>
                    /// {{{notes}}}
                    /// </remarks>
                    /// <exception cref="{{packageName}}.Client.ApiException">Thrown when fails to make API call</exception>
                {{#parameters}}/// <param name="{{paramName}}">{{{description}}}{{^required}} (optional{{#defaultValue}}, default to {{.}}{{/defaultValue}}){{/required}}</param>
                {{/parameters}}/// <returns>Task of ApiResponse{{#returnType}} ({{returnType}}){{/returnType}}</returns>
                    Task<ApiResponse<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Object{{/returnType}}>> {{operationId}}AsyncWithHttpInfo ({{#parameters}}{{{dataType}}} {{paramName}}{{^required}}{{#optionalMethodArgument}} = null!{{/optionalMethodArgument}}{{/required}}{{#hasMore}}, {{/hasMore}}{{/parameters}});
            {{/contents}}
        {{/operation}}
            #endregion Asynchronous Operations
    {{/supportsAsync}}
        }


    {{#operation}}
        internal class {{nickname}}Definition: OperationDefinition {
            public override string Path => "{{path}}";

            public override string OperationName => "{{nickname}}";

            public override string[] PathParams => new[] { {{#pathParams}}"{{baseName}}",{{/pathParams}} };

            public override Dictionary<int, Func<object>> ResponseStatusCodeMap => new()
            {
        {{#responses}}{{#dataType}}
                {
                    {{code}}, () => new {{dataType}}()
                },
        {{/dataType}}{{/responses}}
            };
        }
    {{/operation}}

{{/operations}}
    }
